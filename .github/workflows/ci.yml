name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Run tests
        run: go test -v -race -coverprofile=coverage.out ./...

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.out
          fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Run custom linter
        run: |
          set -o pipefail
          go run tools lint ./... 2>&1 | tee lint-output.txt || {
            echo "::group::Linting Issues"
            while IFS= read -r line; do
              if [[ "$line" =~ ^([^:]+):([0-9]+):([0-9]+):(.*)$ ]]; then
                file="${BASH_REMATCH[1]}"
                line_num="${BASH_REMATCH[2]}"
                col="${BASH_REMATCH[3]}"
                message="${BASH_REMATCH[4]}"
                echo "::error file=$file,line=$line_num,col=$col::$message"
              elif [[ "$line" =~ ^([^:]+):([0-9]+):(.*)$ ]]; then
                file="${BASH_REMATCH[1]}"
                line_num="${BASH_REMATCH[2]}"
                message="${BASH_REMATCH[3]}"
                echo "::error file=$file,line=$line_num::$message"
              else
                echo "::error::$line"
              fi
            done < lint-output.txt
            echo "::endgroup::"
            exit 1
          }

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Build with GoReleaser (snapshot)
        run: go tool goreleaser build --snapshot --clean

      - name: Test binary execution
        run: ./dist/kessoku_linux_amd64_v1/kessoku --version
