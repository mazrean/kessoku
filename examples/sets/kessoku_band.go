// Code generated by kessoku. DO NOT EDIT.

package main

import (
	"fmt"
	"github.com/mazrean/kessoku"
	"log"
)

func InitializeAppBasic() (*App, error) {
	config := kessoku.Provide(NewConfig).Fn()()
	var err error
	database, err := kessoku.Provide(NewDatabase).Fn()(config)
	if err != nil {
		var zero *App
		return zero, err
	}
	userService := kessoku.Provide(NewUserService).Fn()(database)
	app := kessoku.Provide(NewApp).Fn()(userService)
	return app, nil
}
func InitializeAppWithInlineSet() (*App, error) {
	config0 := kessoku.Provide(NewConfig).Fn()()
	var err0 error
	database0, err0 := kessoku.Provide(NewDatabase).Fn()(config0)
	if err0 != nil {
		var zero *App
		return zero, err0
	}
	userService0 := kessoku.Provide(NewUserService).Fn()(database0)
	app0 := kessoku.Provide(NewApp).Fn()(userService0)
	return app0, nil
}
func InitializeAppWithSetVariable() (*App, error) {
	config1 := kessoku.Provide(NewConfig).Fn()()
	var err1 error
	database1, err1 := kessoku.Provide(NewDatabase).Fn()(config1)
	if err1 != nil {
		var zero *App
		return zero, err1
	}
	userService1 := kessoku.Provide(NewUserService).Fn()(database1)
	app1 := kessoku.Provide(NewApp).Fn()(userService1)
	return app1, nil
}
func InitializeAppWithNestedSets() (*App, error) {
	config2 := kessoku.Provide(NewConfig).Fn()()
	var err2 error
	database2, err2 := kessoku.Provide(NewDatabase).Fn()(config2)
	if err2 != nil {
		var zero *App
		return zero, err2
	}
	userService2 := kessoku.Provide(NewUserService).Fn()(database2)
	app2 := kessoku.Provide(NewApp).Fn()(userService2)
	return app2, nil
}
